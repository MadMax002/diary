apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
}

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        multiDexEnabled true

        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

        applicationId globalConfiguration.getAt("androidApplicationId")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
    }

    signingConfigs {
        releaseConfig
                {
                    storeFile file('E:/оплата будинок/квитанціі/video_dairy_release.jks')
                    storePassword("4759112aA");
                    keyAlias "videodailyalias";
                    keyPassword "videodaily321aA";
                }
    }

    dexOptions {
        javaMaxHeapSize = "4g"
    }

    buildTypes {
        debug {
            minifyEnabled false

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig

            applicationVariants.all { variant ->
                variant.outputs.each { output ->

                    def newName = output.outputFile.name
                    newName = newName.replace("presentation-", "video-dairy-")
                    newName = newName.replace("-release", "-release-" + defaultConfig.versionName)

                    output.outputFile = new File(output.outputFile.parent, newName)
                }
            }
        }
    }
    return void
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile project(':domain')
    compile project(':data')

    def presentationDependencies = rootProject.ext.presentationDependencies

    compile presentationDependencies.appCompatSupport
    compile presentationDependencies.supportAndroid
    compile presentationDependencies.nineOldAndroidsVersion
    compile presentationDependencies.easing
    compile presentationDependencies.androidAnimations
    compile presentationDependencies.googlePlayServices
    compile presentationDependencies.recyclerView
    compile presentationDependencies.cardViewVersion
    compile presentationDependencies.rxJava
    compile presentationDependencies.rxAndroid
    compile presentationDependencies.javaxAnnotation
    compile presentationDependencies.butterKnife
    compile presentationDependencies.dagger
    compile presentationDependencies.designAndroid
    compile presentationDependencies.eventBus
    compile presentationDependencies.multidex

    annotationProcessor presentationDependencies.daggerCompiler
    annotationProcessor presentationDependencies.butterKnifeCompiler

    compile('com.crashlytics.sdk.android:crashlytics:2.2.2@aar') {
        transitive = true;
    }
}